=========================
"2-matrix_divided" module
=========================


===============================
Using "matrix_divided function"
===============================

Import function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal success case:
    >>> matrix = [[1, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 1.33, 1.67], [2.0, 0.67, 0.33]]

First element in the matrix is not a list:
    >>> matrix = [5, [6, 2, 1]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Second element in the matrix is not a list:
    >>> matrix = [[1, 4, 5], 5]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Element in the matrix is not an int or float:
    >>> matrix = [[5, 4, 5], ["fady", 2, 1]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Rows in the matrix are not the same size:
    >>> matrix = [[5, 4, 5], [2, 1]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Passing div which is neither int nor float:
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(matrix, "fady"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Passing div 0:
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Passing None in div:
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Passing None in matrix:
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(None, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing list:
    >>> matrix = [5, 4, 3, 2, 1]
    >>> print(matrix_divided(None, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing number in matrix:
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(5, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Not passing div:
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Passing div of float('inf'):
    >>> matrix = [[5, 4, 5], [6, 2, 1]]
    >>> print(matrix_divided(matrix, float('inf')))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
